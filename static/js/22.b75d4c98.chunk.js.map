{"version":3,"sources":["helpers/hooksFormInput.js","helpers/componentHelperFunc.js","store/Actions/UserEventAction.js","services/UsersEventDetailService.js","views/view-fans-paid/components/PaidFansFilter.js","views/view-fans-paid/components/PaidFansLists.js","views/view-fans-paid/ViewPaidFans.js"],"names":["useFormFields","initialState","useState","fields","setValues","event","target","id","value","disableSubmitButton","dataObject","setDisable","objects","test","cleanUpData","abortController","abort","instantiateAbort","AbortController","signal","SwalAlert","title","text","icon","swal","button","viewEventDetailsAction","perPage","pageIndex","input","options","dispatch","type","RESTART_EVENT_DETAILS_RESPONSE","EVENT_DETAILS_LOADING","addedUrl","HttpService","getData","then","data","console","log","catch","error","EventListService","res","hasOwnProperty","success","EVENT_DETAILS_SUCCESS","EVENT_DETAILS_ERROR","EVENT_DETAILS_CODE_ERROR","getPaidUsersPerEventAction","eventId","perpage","RESTART_USERS_PAID_FOR_EVENT_DETAILS_RESPONSE","USERS_PAID_FOR_EVENT_DETAILS_LOADING","PaidUsersPerEventService","USERS_PAID_FOR_EVENT__DETAILS_SUCCESS","USERS_PAID_FOR_EVENT_DETAILS_ERROR","USERS_PAID_FOR_EVENT_DETAILS_CODE_ERROR","TotalRevenuePerEventAction","eventid","RESTART_REVENUE_PER_EVENT_RESPONSE","REVENUE_PER_EVENT_LOADING","celebrityId","TotalRenuePerEventService","REVENUE_PER_EVENT_SUCCESS","REVENUE_PER_EVENT_ERROR","REVENUE_PER_EVENT_CODE_ERROR","TotalRevenuePerCelebrityAction","celebrityid","RESTART_REVENUE_PER_CELEBRITY_RESPONSE","REVENUE_PER_CELEBRITY_LOADING","TotalRevenuePerCelebrityService","REVENUE_PER_CELEBRITY_SUCCESS","REVENUE_PER_CELEBRITY_ERROR","REVENUE_PER_CELEBRITY_CODE_ERROR","Select","Option","Input","Search","Group","PaidFansFilter","props","useDispatch","handleFieldChange","className","placeholder","name","onChange","size","style","width","onClick","parentCallBack","marginLeft","content","placement","color","fontSize","PaidFansLists","useParams","PaidForEventList","useSelector","state","eventReducer","usersPaidForEventResponse","abortEffect","currentPage","setCurrentPage","useEffect","filterData","height","minWidth","map","key","username","email","parseInt","cost_of_event","toLocaleString","celebrity_profit","to","user_id","cursor","aria-hidden","activePage","pages","total","onActivePageChange","nextOrPrevPageClicked","last_page","ViewPaidFans","userFilterData","setuserFilterData","totalRevnue","totalRevenuePerEventResponse","params","md","textAlign","marginBottom","fontWeight"],"mappings":"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","file":"static/js/22.b75d4c98.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport const  useFormFields = (initialState) => {\n  const [fields, setValues] = useState(initialState);\n\n  return [\n    fields,\n    setValues,\n    function(event) {\n      setValues({\n        ...fields,\n        [event.target.id]: event.target.value\n      });\n    }\n  ];\n}\n\n\n\nexport const disableSubmitButton = (dataObject,setDisable)=>\n   {\n    for(var objects in dataObject)\n    {\n      /**\n       * if  an empty field exist then disable submit button\n       */\n     if(dataObject[objects]==\"\" || dataObject[objects]==null)\n     {\n       \n        return  setDisable(true);\n     }\n     /**\n       * if  an invalid email exists in the form then disable submit button\n       */\n     if(objects==\"email\")\n     {\n         if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(dataObject[objects]))\n         {\n          return  setDisable(true);\n         }\n     }\n\n    }\n   /**\n    * all forms fields have been submited then we return false and set disable property to true\n    */\n     return setDisable(false);\n   }","\nimport swal from 'sweetalert';\n\n\nexport const cleanUpData = (abortController) =>\n{\n    abortController.abort();\n}\n\nexport const instantiateAbort = () =>\n{\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    return abortController;\n}\n\nexport const redirectIfTokenExist = (tokenIdentifier,props) =>\n{\n    let token = localStorage.getItem(tokenIdentifier);\n    if(token !=\"\" && token != null)\n    {\n      props.history.push(\"/user\");\n    }\n}\n\n\nexport const redirectIfTokenExpired = (tokenIdentifier,history) =>\n{\n localStorage.removeItem(tokenIdentifier);\n  history.push(\"/login\");\n}\n\n\n // a little function to help us with reordering the result\n export const reOrder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n \n  console.log(result);\n\n return result;\n\n   };\n\n\nexport const getBase64 =  (file,callback)=> \n{\n   \n  try{\n    const reader = new FileReader();\n\n    reader.addEventListener('load',\n     () => callback(reader.result)\n     );\n\n    reader.readAsDataURL(file);\n  }catch(ex)\n  {\n   console.log(ex)\n  }\n   \n}\n\nexport const SwalAlert = (title,text,icon) =>\n{\nreturn  swal({\n  title: title,\n  text: text,\n  icon: icon,\n  button: true\n})\n\n}\n\n\nexport const tokenExist = (tokenIdentifier) =>\n{\n  let token = localStorage.getItem(tokenIdentifier);\n  if(token == \"\" || token==null)\n  {\n    return false;\n  }\n  return true;\n}\n\n\nexport const convertUrlToBase64String = (imgUrl) =>\n{\n  return new Promise(\n    function(resolve, reject) {\n\n      var img = new Image();\n      img.setAttribute('crossOrigin', 'anonymous');\n      img.src = imgUrl;\n     \n\n      img.onload = function() {\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        var ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        var dataURL = canvas.toDataURL();\n        resolve(dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\"));\n      }\n      img.onerror = function() {\n        reject(\"The image could not be loaded.\");\n      }\n\n    });\n}","import { RESTART_EVENT_DETAILS_RESPONSE, EVENT_DETAILS_LOADING, EVENT_DETAILS_SUCCESS, \n    EVENT_DETAILS_ERROR, EVENT_DETAILS_CODE_ERROR, RESTART_USERS_PAID_FOR_EVENT_DETAILS_RESPONSE, \n    USERS_PAID_FOR_EVENT_DETAILS_LOADING, USERS_PAID_FOR_EVENT__DETAILS_SUCCESS,\n     USERS_PAID_FOR_EVENT_DETAILS_ERROR, USERS_PAID_FOR_EVENT_DETAILS_CODE_ERROR, RESTART_REVENUE_PER_EVENT_RESPONSE, REVENUE_PER_EVENT_LOADING, REVENUE_PER_EVENT_SUCCESS, REVENUE_PER_EVENT_ERROR, REVENUE_PER_EVENT_CODE_ERROR, RESTART_REVENUE_PER_CELEBRITY_RESPONSE, REVENUE_PER_CELEBRITY_LOADING, REVENUE_PER_CELEBRITY_SUCCESS, REVENUE_PER_CELEBRITY_ERROR, REVENUE_PER_CELEBRITY_CODE_ERROR } from \"../ActionTypes/UserEventActionTypes\";\nimport { EventListService, PaidUsersPerEventService,\n     TotalRenuePerEventService,\n    TotalRevenuePerCelebrityService } from \"../../services/UsersEventDetailService\";\n\nexport const viewEventDetailsAction = (perPage,pageIndex,input,options) =>\n{\nreturn (dispatch)=>{\n\n dispatch({type:RESTART_EVENT_DETAILS_RESPONSE});\n dispatch({type:EVENT_DETAILS_LOADING});\n\n  EventListService(perPage,pageIndex,input,options).then((res)=>{\n\n         console.log(res);\n\n         if(res.hasOwnProperty('success') && res.success==true){\n          dispatch({type:EVENT_DETAILS_SUCCESS ,res});\n        \n\n         }else if(res.hasOwnProperty('success') && res.success==false) {\n              dispatch({type:EVENT_DETAILS_ERROR,res});  \n         }\n     },\n     error=>{\n      dispatch({type:EVENT_DETAILS_CODE_ERROR,error});\n         console.log(error);\n     }\n )\n} \n\n}\n\nexport const clearEventListState= ()=>\n{\nreturn (dispatch)=>\n{\n dispatch({type:RESTART_EVENT_DETAILS_RESPONSE});\n}\n}\n\nexport const getPaidUsersPerEventAction = (eventId,input,perpage,pageIndex) =>\n{\nreturn (dispatch)=>{\n\n dispatch({type:RESTART_USERS_PAID_FOR_EVENT_DETAILS_RESPONSE});\n dispatch({type:USERS_PAID_FOR_EVENT_DETAILS_LOADING});\n\n  PaidUsersPerEventService(eventId,input,perpage,pageIndex).then((res)=>{\n\n         console.log(res);\n\n         if(res.hasOwnProperty('success') && res.success==true){\n          dispatch({type:USERS_PAID_FOR_EVENT__DETAILS_SUCCESS,res});\n        \n\n         }else if(res.hasOwnProperty('success') && res.success==false) {\n              dispatch({type:USERS_PAID_FOR_EVENT_DETAILS_ERROR,res});  \n         }\n     },\n     error=>{\n      dispatch({type:USERS_PAID_FOR_EVENT_DETAILS_CODE_ERROR,error});\n         console.log(error);\n     }\n )\n} \n\n}\n\nexport const clearPaidEventListState= ()=>\n{\nreturn (dispatch)=>\n{\n dispatch({type:RESTART_USERS_PAID_FOR_EVENT_DETAILS_RESPONSE});\n}\n}\n\n\nexport const TotalRevenuePerEventAction = (eventid) =>\n{\nreturn (dispatch)=>{\n\n dispatch({type:RESTART_REVENUE_PER_EVENT_RESPONSE});\n dispatch({type:REVENUE_PER_EVENT_LOADING});\n\n  TotalRenuePerEventService(eventid).then((res)=>{\n\n         console.log(res);\n\n         if(res.hasOwnProperty('success') && res.success==true){\n          dispatch({type:REVENUE_PER_EVENT_SUCCESS,res});\n        \n\n         }else if(res.hasOwnProperty('success') && res.success==false) {\n              dispatch({type:REVENUE_PER_EVENT_ERROR,res});  \n         }\n     },\n     error=>{\n      dispatch({type:REVENUE_PER_EVENT_CODE_ERROR,error});\n         console.log(error);\n     }\n )\n} \n\n}\n\nexport const clearSingleEventRevenueState = ()=>\n{\nreturn (dispatch)=>\n{\n dispatch({type:RESTART_REVENUE_PER_EVENT_RESPONSE});\n}\n}\n\n\nexport const TotalRevenuePerCelebrityAction = (celebrityid) =>\n{\nreturn (dispatch)=>{\n\n dispatch({type:RESTART_REVENUE_PER_CELEBRITY_RESPONSE});\n dispatch({type:REVENUE_PER_CELEBRITY_LOADING});\n\n  TotalRevenuePerCelebrityService(celebrityid).then((res)=>{\n\n         console.log(res);\n\n         if(res.hasOwnProperty('success') && res.success==true){\n          dispatch({type:REVENUE_PER_CELEBRITY_SUCCESS,res});\n        \n\n         }else if(res.hasOwnProperty('success') && res.success==false) {\n              dispatch({type:REVENUE_PER_CELEBRITY_ERROR,res});  \n         }\n     },\n     error=>{\n      dispatch({type:REVENUE_PER_CELEBRITY_CODE_ERROR,error});\n         console.log(error);\n     }\n )\n} \n\n}\n\nexport const clearSingleCelebrityRevenueState = ()=>\n{\nreturn (dispatch)=>\n{\n dispatch({type:RESTART_REVENUE_PER_CELEBRITY_RESPONSE});\n}\n}\n","import HttpService from './HttpService';\nimport Cookies from 'js-cookie'\n\n\n\n\nexport const EventListService = (perPage,pageIndex,input,options) =>\n{\n    const http = new HttpService();\n    \n    let addedUrl = \"\";\n    /**\n     * if input and options select is empty\n     */\n    if((input==null || input==\"\") && (options==null || options==\"\")) \n    {\n        addedUrl = \"admin/get-event-list/\"+perPage+\"?page=\"+pageIndex;\n    }\n    else if((input!=null || input !=\"\") && (options==null || options==\"\") )\n    {\n        addedUrl = \"admin/filter-event-by-input/\"+input+\"/\"+perPage+\"?page=\"+pageIndex;\n    }\n    else if((input==null || input ==\"\") && (options!=null || options!=\"\"))\n    {\n        addedUrl = \"admin/filter-event-by-options/\"+options+\"/\"+perPage+\"?page=\"+pageIndex;\n    }\n    else if((input!=null || input !=\"\") && (options!=null || options!=\"\"))\n    {\n        addedUrl = \"admin/filter-event-by-input-and-options/\"+options+\"/\"+input+\"/\"+perPage+\"?page=\"+pageIndex;\n    }\n    \n    let tokenId = 'vt-music';\n    return http.getData(addedUrl,tokenId).then((data)=>\n    {\n        console.log(data)\n        return data;\n\n    }).catch((error)=>\n    {\n        console.log(error)\n        return error;\n    });\n}\n\n/**\n * /get-paid-users-for-event/{eventId}/{pager}\n */\n\n\nexport const PaidUsersPerEventService = (eventId,input,perPage,pageIndex) =>\n{\n    const http = new HttpService();\n    \n    let addedUrl = \"\";\n    /**\n     * if input and options select is empty\n     */\n    if(input==null || input==\"\") \n    {\n        addedUrl = \"admin/get-paid-users-for-event/\"+eventId+\"/\"+perPage+\"?page=\"+pageIndex;\n    }\n    else if((input!=null || input !=\"\"))\n    {\n        addedUrl = \"admin/get-paid-users-for-event-search/\"+eventId+\"/\"+input+\"/\"+perPage+\"?page=\"+pageIndex;\n    }\n  \n    let tokenId = 'vt-music';\n    return http.getData(addedUrl,tokenId).then((data)=>\n    {\n        console.log(data)\n        return data;\n\n    }).catch((error)=>\n    {\n        console.log(error)\n        return error;\n    });\n}\n\n/**\n * /get-total-revenue-made-from-event/{eventid\n */\n\nexport const TotalRenuePerEventService = (celebrityId) =>\n{\n    const http = new HttpService();\n    \n   let addedUrl = \"admin/get-total-revenue-made-from-event/\"+celebrityId;\n  \n    let tokenId = 'vt-music';\n    return http.getData(addedUrl,tokenId).then((data)=>\n    {\n        console.log(data)\n        return data;\n\n    }).catch((error)=>\n    {\n        console.log(error)\n        return error;\n    });\n}\n///total-revenue-generated/{celebrityId}\nexport const TotalRevenuePerCelebrityService = (celebrityId) =>\n{\n    const http = new HttpService();\n    \n   let addedUrl = \"admin/total-revenue-generated/\"+celebrityId;\n  \n    let tokenId = 'vt-music';\n    return http.getData(addedUrl,tokenId).then((data)=>\n    {\n        console.log(data)\n        return data;\n\n    }).catch((error)=>\n    {\n        console.log(error)\n        return error;\n    });\n}\n\n","import React,{useEffect,useState} from 'react'\nimport { AudioOutlined } from '@ant-design/icons';\nimport Loader from 'react-loader-spinner'\n\nimport {\n    useDispatch,\n     useSelector\n    }   \n     from 'react-redux'; \nimport { instantiateAbort, cleanUpData, SwalAlert } from '../../../helpers/componentHelperFunc';\n\nimport {\n    useFormFields,\n    disableSubmitButton\n }  from '../../../helpers/hooksFormInput'\n import { Slider, InputNumber, Row, Col,DatePicker,Input,Select } from 'antd';\nimport { Button } from 'antd';\nimport { CTooltip } from '@coreui/react';\n\n\nconst { Option } = Select; \n\n\nconst { Search } = Input;\n\nconst InputGroup = Input.Group;\n\nexport default function PaidFansFilter(props) \n{\n  \n    const dispatch =  useDispatch();\n  \n    const abortEffect = instantiateAbort();\n   \n    \n   const perPage = 5;\n\n    const [fields,setValues,handleFieldChange] = useFormFields({\n        input: \"\",\n      });  \n\n\n  \n\n   const filterUsers = () =>\n   {\n       if(fields.input==\"\")\n       {\n         SwalAlert(\"Emtpy Fields\",`please \n          enter a text to be filtered by`,\"error\");\n       }else\n       {\n        props.parentCallBack(fields);\n       }\n  \n   }\n\n\n\n    return (\n      \n        <div className=\"container\">\n        <div className=\"row\">\n       \n        <div className=\"col-md-2\">\n     \n      \n        </div>\n\n          \n\n        <div className=\"col-md-10\">\n         \n        <Input placeholder=\"Search For Users Who Paid Here\" \n        value={fields.input}\n        id=\"input\"\n        name=\"input\"\n        onChange={handleFieldChange}\n        size=\"large\" style={{width:\"60%\"}} />\n       \n  <Button type=\"primary\" onClick={filterUsers} style={{marginLeft:\"10px\"}} size=\"large\">Search</Button>\n        \n        <CTooltip\n        content={`you can filter both by entering the search input and clicking \n        the search button`}\n        placement={\"top\"}\n        >\n          <i className=\"fa fa-info-circle fa-1x\" style={{color:'red',\n          marginLeft:'10px',fontSize:'20px'}}></i>\n          </CTooltip>\n        </div>\n\n\n    \n\n        </div>\n       \n     <br/>\n   \n\n\n        </div>\n    )\n}\n","import React,{useState,useEffect} from 'react';\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CTooltip,\n  CRow,\n  CButton,\n  CPagination\n} from '@coreui/react';\n\n\n\nimport {\n  useDispatch,\n   useSelector\n  } from 'react-redux'\n    \n  import {\n    useFormFields,\n    disableSubmitButton\n }  from '../../../helpers/hooksFormInput'\n import {\n     cleanUpData,\n     instantiateAbort\n    } from '../../../helpers/componentHelperFunc'\n\n  \n    import Loader from 'react-loader-spinner'\n\nimport { NavLink } from 'react-router-dom';\nimport { getPaidUsersPerEventAction } from '../../../store/Actions/UserEventAction';\nimport { useHistory,useParams } from 'react-router-dom';\n\n\n \n\n\n\nexport default function PaidFansLists(props)  \n{\n   \n  const params = useParams();\n\n  const {id} = params;\n\n  const dispatch =  useDispatch();\n     \n  const PaidForEventList = useSelector(state => state.eventReducer.usersPaidForEventResponse);\n\n  const abortEffect = instantiateAbort();\n\n  const perPage = 5;\n  \n  const [currentPage, setCurrentPage] = useState(1)\n\n   useEffect(() => {\n       \n      dispatch(getPaidUsersPerEventAction(id,props.filterData.input,perPage,1));\n    \n     return () => {\n       cleanUpData(abortEffect)\n     };\n   }, [props.filterData])\n\n    useEffect(() => {\n      dispatch(getPaidUsersPerEventAction(id,null,perPage,1));\n    \n      return () => {\n        cleanUpData(abortEffect);\n      }\n    }, []);\n\n\n  \n\n  const loadPageItem = (nextOrPrevPageClicked) =>\n  {\n    if(props.hasOwnProperty(\"filterData\") && props.filterData!=null\n     && props.filterData!=\"\")\n    {\n      dispatch(getPaidUsersPerEventAction(id,props.filterData.input,perPage,nextOrPrevPageClicked)); \n  \n    setCurrentPage(nextOrPrevPageClicked);\n    }else\n    {\n      dispatch(getPaidUsersPerEventAction(id,props.filterData.input,perPage,nextOrPrevPageClicked));\n   \n  \n    setCurrentPage(nextOrPrevPageClicked);\n    }\n    \n  } \n\n\n\n\n  return (\n    <>\n    <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>\n            Fans Who Paid For Event\n            </CCardHeader>\n            <CCardBody>\n               \n               {\n                  PaidForEventList == 'loading' || PaidForEventList == '' ?\n\n                  <Loader type=\"ThreeDots\" color=\"#321fdb\" height={100} width={100} />\n                  :\n                  PaidForEventList.hasOwnProperty('data') && PaidForEventList.success == true ?\n                    <>\n<table className=\"table table-bordered table-striped table-responsive\">\n    <thead>\n      <tr>\n       \n        <th style={{minWidth:200}}>Fan Username</th>\n        <th style={{minWidth:200}}>Fan Email</th>\n        <th style={{minWidth:200}}>Amount Paid By Fan</th>\n        <th style={{minWidth:200}}>Celebrity Profit Made</th>\n        <th style={{minWidth:200}}>Fan Profile</th>\n       \n      </tr>\n    </thead>\n    <tbody>\n      {  \n        PaidForEventList.data.data.map((data)=>(\n  \n          <tr key={data.id}>\n          <td>{data.username}</td>\n          <td>{data.email}</td>\n      <td>{\"₦\"+parseInt(data.cost_of_event  ).toLocaleString()}</td>\n     \n       <td>\n       {\"₦\"+parseInt(data.celebrity_profit).toLocaleString()}\n       </td>\n        \n          <td>\n            <NavLink to={`/view-user/${data.user_id}`} >\n            <CBadge color=\"primary\" style={{cursor:\"pointer\"}}>\n             <i className=\"fa fa-eye\" aria-hidden=\"true\"></i>\n            </CBadge>\n            </NavLink>\n           \n            \n            </td>\n       \n    </tr>\n\n        ))\n      }\n     \n      \n    </tbody>\n  </table>\n\n<div style={{marginLeft:10}}>\n            <CPagination\n            size=\"sm\"\n            activePage={currentPage}\n            pages={PaidForEventList.data.total}\n            onActivePageChange={loadPageItem}\n            pages={PaidForEventList.data.last_page}\n          />\n                 \n            \n            </div>\n            </>\n            :\n\n            \"\"\n            \n           }\n\n\n            </CCardBody>\n            \n           \n\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n}\n  \n\n\n","import React,{useState,useEffect} from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody, \n  CCardGroup,\n  CCol,\n  CContainer,\n  CRow\n} from '@coreui/react'\nimport PaidFansFilter from './components/PaidFansFilter'\nimport PaidFansLists from './components/PaidFansLists'\nimport { useDispatch,useSelector } from 'react-redux'\nimport { TotalRevenuePerEventAction } from '../../store/Actions/UserEventAction'\nimport Loader from 'react-loader-spinner'\n\n\n\nconst ViewPaidFans = () => {\n\n \n  const [userFilterData, setuserFilterData] = useState(\"\");\n  const totalRevnue = useSelector(state => state.eventReducer.totalRevenuePerEventResponse);\n\n  const params = useParams();\n\n  const dispatch = useDispatch();\n\n  const {id} = params;\n\n  useEffect(() => {\n    \n    dispatch(TotalRevenuePerEventAction(id));\n\n    return () => {\n      \n    }\n  }, [])\n\n  const getSearchFilterData = (data)=>\n  {\n    console.log(data);\n    console.log('user filters');\n    setuserFilterData(data);\n  }\n\n\n  return (\n    <div className=\" c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"12\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                <div style={{textAlign:\"center\",marginBottom:20}} >\n                  <h5>Fans Who Paid For This Show</h5>\n                  </div>\n                  {\n                    totalRevnue!=\"\" && totalRevnue !=\"loading\"?\n                    totalRevnue.hasOwnProperty('success') && totalRevnue.success==true?\n                    <div style={{textAlign:\"center\",marginBottom:20}} >\n                    <h5 style={{fontSize:14}}>Total Revenue Celebrity Made From this Event \n                      ( {<span style={{color:\"red\",fontWeight:\"bold\"}}>{\"₦\"+parseInt(totalRevnue.data).toLocaleString()}</span>})</h5>\n                    </div>      \n                    :\n                    <b>there seems to be a problem please refresh this page..</b>\n                    :\n                    <div style={{textAlign:\"center\"}}>\n             <Loader type=\"ThreeDots\" color=\"#321fdb\" height={30} width={30} />\n                    </div>\n                    \n                  }\n               \n                 \n                \n                  <PaidFansFilter parentCallBack={getSearchFilterData} />\n                   <PaidFansLists filterData={userFilterData} />\n                   \n                </CCardBody>\n              </CCard>\n            \n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default ViewPaidFans\n"],"sourceRoot":""}