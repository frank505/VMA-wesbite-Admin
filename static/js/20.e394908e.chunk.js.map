{"version":3,"sources":["helpers/hooksFormInput.js","helpers/componentHelperFunc.js","store/Actions/BankDetailsAction.js","services/UserBankDetailsService.js","views/view-bank-details/components/BankDetailsFilter.js","views/view-bank-details/components/BankDetailsLists.js","views/view-bank-details/ViewBankDetails.js"],"names":["useFormFields","initialState","useState","fields","setValues","event","target","id","value","disableSubmitButton","dataObject","setDisable","objects","test","cleanUpData","abortController","abort","instantiateAbort","AbortController","signal","SwalAlert","title","text","icon","swal","button","loadBankNameOptions","dispatch","type","RESTART_BANK_NAME_RESPONSE","BANK_NAME_LOADING","HttpService","getData","then","data","console","log","catch","error","res","hasOwnProperty","success","BANK_NAME_SUCCESS","BANK_NAME_ERROR","BANK_NAME_CODE_ERROR","viewBankListAction","perPage","pageIndex","input","options","RESTART_BANKLIST_RESPONSE","BANKLIST_LOADING","addedUrl","getBankDetailsListService","BANKLIST_SUCCESS","BANKLIST_ERROR","BANKLIST_CODE_ERROR","Option","Select","Input","Search","BankDetailsFilter","props","useDispatch","bankNames","useSelector","state","bankDetails","bankNameResponse","abortEffect","option","handleFieldChange","useEffect","className","color","height","width","defaultValue","size","name","onChange","style","filterOption","children","toLowerCase","indexOf","key","Math","random","map","bank_name","placeholder","onClick","parentCallBack","marginLeft","content","placement","fontSize","BankDetailsLists","BankLists","bankListResponse","currentPage","setCurrentPage","filterData","user","email","account_name","account_number","bank_code","to","user_id","cursor","aria-hidden","created_at","activePage","pages","total","onActivePageChange","nextOrPrevPageClicked","last_page","ViewBankDetails","userFilterData","setuserFilterData","md"],"mappings":"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","file":"static/js/20.e394908e.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport const  useFormFields = (initialState) => {\n  const [fields, setValues] = useState(initialState);\n\n  return [\n    fields,\n    setValues,\n    function(event) {\n      setValues({\n        ...fields,\n        [event.target.id]: event.target.value\n      });\n    }\n  ];\n}\n\n\n\nexport const disableSubmitButton = (dataObject,setDisable)=>\n   {\n    for(var objects in dataObject)\n    {\n      /**\n       * if  an empty field exist then disable submit button\n       */\n     if(dataObject[objects]==\"\" || dataObject[objects]==null)\n     {\n       \n        return  setDisable(true);\n     }\n     /**\n       * if  an invalid email exists in the form then disable submit button\n       */\n     if(objects==\"email\")\n     {\n         if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(dataObject[objects]))\n         {\n          return  setDisable(true);\n         }\n     }\n\n    }\n   /**\n    * all forms fields have been submited then we return false and set disable property to true\n    */\n     return setDisable(false);\n   }","\nimport swal from 'sweetalert';\n\n\nexport const cleanUpData = (abortController) =>\n{\n    abortController.abort();\n}\n\nexport const instantiateAbort = () =>\n{\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    return abortController;\n}\n\nexport const redirectIfTokenExist = (tokenIdentifier,props) =>\n{\n    let token = localStorage.getItem(tokenIdentifier);\n    if(token !=\"\" && token != null)\n    {\n      props.history.push(\"/user\");\n    }\n}\n\n\nexport const redirectIfTokenExpired = (tokenIdentifier,history) =>\n{\n localStorage.removeItem(tokenIdentifier);\n  history.push(\"/login\");\n}\n\n\n // a little function to help us with reordering the result\n export const reOrder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n \n  console.log(result);\n\n return result;\n\n   };\n\n\nexport const getBase64 =  (file,callback)=> \n{\n   \n  try{\n    const reader = new FileReader();\n\n    reader.addEventListener('load',\n     () => callback(reader.result)\n     );\n\n    reader.readAsDataURL(file);\n  }catch(ex)\n  {\n   console.log(ex)\n  }\n   \n}\n\nexport const SwalAlert = (title,text,icon) =>\n{\nreturn  swal({\n  title: title,\n  text: text,\n  icon: icon,\n  button: true\n})\n\n}\n\n\nexport const tokenExist = (tokenIdentifier) =>\n{\n  let token = localStorage.getItem(tokenIdentifier);\n  if(token == \"\" || token==null)\n  {\n    return false;\n  }\n  return true;\n}\n\n\nexport const convertUrlToBase64String = (imgUrl) =>\n{\n  return new Promise(\n    function(resolve, reject) {\n\n      var img = new Image();\n      img.setAttribute('crossOrigin', 'anonymous');\n      img.src = imgUrl;\n     \n\n      img.onload = function() {\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        var ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        var dataURL = canvas.toDataURL();\n        resolve(dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\"));\n      }\n      img.onerror = function() {\n        reject(\"The image could not be loaded.\");\n      }\n\n    });\n}","import { \n    RESTART_BANK_NAME_RESPONSE,\n    BANK_NAME_LOADING, \n    BANKLIST_SUCCESS, \n    BANKLIST_ERROR, \n    BANK_NAME_CODE_ERROR, \n    BANK_NAME_ERROR,  \n    BANK_NAME_SUCCESS, \n    RESTART_BANKLIST_RESPONSE,\n    BANKLIST_LOADING,\n    BANKLIST_CODE_ERROR,\n    \n  } from \"../ActionTypes/UserBankDetailTypes\";\n\nimport { getBankDetailsListService,\n        BankNamesOptionService } from \"../../services/UserBankDetailsService\";\n\n\nexport const loadBankNameOptions = () =>\n{\nreturn (dispatch)=>{\n\n dispatch({type:RESTART_BANK_NAME_RESPONSE});\n dispatch({type:BANK_NAME_LOADING});\n\nBankNamesOptionService().then((res)=>{\n\n         console.log(res);\n\n         if(res.hasOwnProperty('success') && res.success==true){\n          dispatch({type:BANK_NAME_SUCCESS ,res});\n        \n\n         }else if(res.hasOwnProperty('success') && res.success==false) {\n              dispatch({type:BANK_NAME_ERROR,res});  \n         }\n     },\n     error=>{\n      dispatch({type:BANK_NAME_CODE_ERROR,error});\n         console.log(error);\n     }\n )\n} \n\n}\n\nexport const clearBankNamesOptionService= ()=>\n{\nreturn (dispatch)=>\n{\n dispatch({type:RESTART_BANK_NAME_RESPONSE});\n}\n}\n\n\n\nexport const viewBankListAction = (perPage,pageIndex,input,options) =>\n{\nreturn (dispatch)=>{\n\n dispatch({type:RESTART_BANKLIST_RESPONSE});\n dispatch({type:BANKLIST_LOADING});\n\ngetBankDetailsListService(perPage,pageIndex,input,options).then((res)=>{\n\n         console.log(res);\n\n         if(res.hasOwnProperty('success') && res.success==true){\n          dispatch({type:BANKLIST_SUCCESS ,res});\n        \n\n         }else if(res.hasOwnProperty('success') && res.success==false) {\n              dispatch({type:BANKLIST_ERROR,res});  \n         }\n     },\n     error=>{\n      dispatch({type:BANKLIST_CODE_ERROR,error});\n         console.log(error);\n     }\n )\n} \n\n}\n\nexport const clearBankListState= ()=>\n{\nreturn (dispatch)=>\n{\n dispatch({type:RESTART_BANKLIST_RESPONSE});\n}\n}\n\n","import HttpService from './HttpService';\nimport Cookies from 'js-cookie'\n\n\nexport const getBankDetailsListService = (perPage,pageIndex,input,options) =>\n{\n    const http = new HttpService();\n    \n    let addedUrl = \"\";\n    /**\n     * if input and options select is empty\n     */ \n    if((input==null || input==\"\") && (options==null || options==\"\"))\n    {\n        addedUrl = \"admin/get-bank-details/\"+perPage+\"?page=\"+pageIndex;\n    }\n    else if((input!=null || input !=\"\") && (options==null || options==\"\") )\n    {\n        addedUrl = \"admin/bank-details-filter-by-input/\"+input+\"/\"+perPage+\"?page=\"+pageIndex;\n    }\n    else if((input==null || input ==\"\") && (options!=null || options!=\"\"))\n    {\n        addedUrl = \"admin/bank-details-filter-by-options/\"+options+\"/\"+perPage+\"?page=\"+pageIndex;\n    }\n    else if((input!=null || input !=\"\") && (options!=null || options!=\"\"))\n    {\n        addedUrl = \"admin/bank-details-filter-by-input-and-options/\"+options+\"/\"+input+\"/\"+perPage+\"?page=\"+pageIndex;\n    }\n    \n    let tokenId = 'vt-music';\n    return http.getData(addedUrl,tokenId).then((data)=>\n    {\n        console.log(data)\n        return data;\n\n    }).catch((error)=>\n    {\n        console.log(error)\n        return error;\n    });\n}\n\nexport const BankNamesOptionService = () =>\n{\n    const http = new HttpService();\n    let addedUrl = \"admin/get-unique-bank-names\";\n    let tokenId = 'vt-music';\n    return http.getData(addedUrl,tokenId).then((data)=>\n    {\n        console.log(data)\n        return data;\n\n    }).catch((error)=>\n    {\n        console.log(error)\n        return error;\n    });\n}\n","import React,{useEffect,useState} from 'react'\nimport { Input } from 'antd';\nimport { AudioOutlined } from '@ant-design/icons';\nimport Loader from 'react-loader-spinner'\nimport 'antd/dist/antd.css';\nimport { Select } from 'antd';\nimport {\n    useDispatch,\n     useSelector\n    } \n     from 'react-redux'; \nimport { instantiateAbort, cleanUpData, SwalAlert } from '../../../helpers/componentHelperFunc';\n\nimport {\n    useFormFields,\n    disableSubmitButton\n }  from '../../../helpers/hooksFormInput'\n\nimport { Button } from 'antd';\nimport { CTooltip } from '@coreui/react';\nimport { loadBankNameOptions } from '../../../store/Actions/BankDetailsAction';\n\nconst { Option } = Select;\n\n\nconst { Search } = Input;\n\nexport default function BankDetailsFilter(props) \n{\n  \n    const dispatch =  useDispatch();\n     \n    const bankNames = useSelector(state => state.bankDetails.bankNameResponse);\n  \n    const abortEffect = instantiateAbort();\n   \n    \n   const perPage = 5;\n\n    const [fields,setValues,handleFieldChange] = useFormFields({\n        input: \"\",\n        option:\"\"\n      });  \n\n\n    useEffect(() => {\n         \n        dispatch(loadBankNameOptions());\n\n        return () => {\n\n         cleanUpData(abortEffect)     \n        }\n    }, [])\n\n\n   const filterUsers = () =>\n   {\n       if(fields.input==\"\" && fields.option==\"\")\n       {\n         SwalAlert(\"Emtpy Fields\",`please select a Bank or\n          enter a text to be filtered by or do both`,\"error\");\n       }else\n       {\n        props.parentCallBack(fields);\n       }\n  \n   }\n\n   const handleChange = (data) =>\n   {\n    setValues({\n        option:data\n    });\n   }\n\n    return (\n        <div className=\"container\">\n        <div className=\"row\">\n       \n        <div className=\"col-md-2\"></div>\n\n            <div className=\"col-md-3\">\n            \n            {\n                 bankNames == 'loading' || bankNames == '' ?\n\n                 <Loader type=\"ThreeDots\" color=\"#321fdb\" height={20} width={20} />\n                 :\n                 bankNames.hasOwnProperty('data') && bankNames.success == true ?\n                 <Select defaultValue=\"Select A Bank Name\" \n                 \n            size=\"large\" \n            // value={fields.option}\n            id=\"option\"\n            name=\"option\"\n            onChange={handleChange}\n            style={{width:'100%'}}\n            filterOption={(input, option) =>\n                option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n            >\n                 <Option key={Math.random()} value=\"\" >Select User Type</Option>\n                {bankNames.data.map((bankNames)=>(\n              <Option key={Math.random()} value={bankNames.bank_name}>{bankNames.bank_name}</Option>\n                ))\n                }\n      \n     \n          </Select>\n                 :\n                 \"\"\n\n            }\n           \n\n\n            </div>\n\n        <div className=\"col-md-5\">\n         \n        <Input placeholder=\"Search For Users Here\" \n        value={fields.input}\n        id=\"input\"\n        name=\"input\"\n        onChange={handleFieldChange}\n        size=\"large\" style={{width:\"55%\"}} />\n       \n  <Button type=\"primary\" onClick={filterUsers} style={{marginLeft:\"10px\"}} size=\"large\">Search</Button>\n        \n        <CTooltip\n        content={`you can filter both by entering the search input and clicking \n        the search button or selecting a user type and clicking the search button,\n         you can also combine both of them to filter user lists`}\n        placement={\"top\"}\n        >\n          <i className=\"fa fa-info-circle fa-1x\" style={{color:'red',\n          marginLeft:'10px',fontSize:'20px'}}></i>\n          </CTooltip>\n        </div>\n\n\n    \n\n        </div>\n       \n     <br/>\n   \n\n\n        </div>\n    )\n}\n","import React,{useState,useEffect} from 'react';\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CTooltip,\n  CRow,\n  CButton,\n  CPagination\n} from '@coreui/react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {\n  useDispatch,\n   useSelector\n  } from 'react-redux'\n    \n  import {\n    useFormFields,\n    disableSubmitButton\n }  from '../../../helpers/hooksFormInput'\n import {\n     cleanUpData,\n     instantiateAbort\n    } from '../../../helpers/componentHelperFunc'\n\n    import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\n\n    import Loader from 'react-loader-spinner'\n\nimport { NavLink } from 'react-router-dom';\nimport { viewBankListAction } from '../../../store/Actions/BankDetailsAction';\n\n\n\n\n\n\nexport default function BankDetailsLists(props)  \n{\n   \n \n\n  const dispatch =  useDispatch();\n     \n  const BankLists = useSelector(state => state.bankDetails.bankListResponse);\n\n   \n  const abortEffect = instantiateAbort();\n\n  const perPage = 5;\n  \n  const [currentPage, setCurrentPage] = useState(1)\n\n   useEffect(() => {\n      \n        dispatch( viewBankListAction(perPage,1,props.filterData.input,props.filterData.option)  );\n    \n     return () => {\n       cleanUpData(abortEffect)\n     };\n   }, [props.filterData])\n\n    useEffect(() => {\n      \n     dispatch(viewBankListAction(perPage,1,null,null));\n      return () => {\n        cleanUpData(abortEffect);\n      }\n    }, []);\n\n\n  \n\n  const loadPageItem = (nextOrPrevPageClicked) =>\n  {\n    if(props.hasOwnProperty(\"filterData\") && props.filterData!=null\n     && props.filterData!=\"\")\n    {\n      dispatch(viewBankListAction(perPage,nextOrPrevPageClicked,\n        props.filterData.input,props.filterData.option));\n  \n    setCurrentPage(nextOrPrevPageClicked);\n    }else\n    {\n      dispatch(viewBankListAction(perPage,nextOrPrevPageClicked,\n        props.filterData.input,props.filterData.option));\n  \n    setCurrentPage(nextOrPrevPageClicked);\n    }\n    \n  } \n\n\n\n\n  return (\n    <>\n    <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>\n             User Lists\n            </CCardHeader>\n            <CCardBody>\n               \n               {\n                  BankLists == 'loading' || BankLists == '' ?\n\n                  <Loader type=\"ThreeDots\" color=\"#321fdb\" height={100} width={100} />\n                  :\n                  BankLists.hasOwnProperty('data') && BankLists.success == true ?\n                    <>\n<table className=\"table table-bordered table-striped table-responsive\">\n    <thead>\n      <tr>\n        <th>Email Address</th>\n        <th>Bank Name</th>\n        <th>Account Name</th>\n        <th>Account Number</th>\n        <th>Bank Code</th>\n        <th>User Profile Details</th>\n        <th>Account Created</th>\n      </tr>\n    </thead>\n    <tbody>\n      {  \n        BankLists.data.data.map((user)=>(\n  \n          <tr key={user.id}>\n   \n          <td>{user.email}</td>\n          <td>{user.bank_name}</td>\n          <td>{user.account_name}</td>\n      <td>{user.account_number}</td>\n      <td>{user.bank_code}</td>\n       \n          \n          <td>\n            <NavLink to={`/view-user/${user.user_id}`} >\n            <CBadge color=\"primary\" style={{cursor:\"pointer\"}}>\n             <i className=\"fa fa-eye\" aria-hidden=\"true\"></i>\n            </CBadge>\n            </NavLink>\n           \n            \n            </td>\n        <td>{user.created_at}</td>\n    </tr>\n\n        ))\n      }\n     \n      \n    </tbody>\n  </table>\n\n<div style={{marginLeft:10}}>\n            <CPagination\n            size=\"sm\"\n            activePage={currentPage}\n            pages={BankLists.data.total}\n            onActivePageChange={loadPageItem}\n            pages={BankLists.data.last_page}\n          />\n                 \n            \n            </div>\n            </>\n            :\n\n            \"\"\n            \n           }\n\n\n            </CCardBody>\n            \n           \n\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n}\n  ","import React,{useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CRow\n} from '@coreui/react'\nimport BankDetailsFilter from './components/BankDetailsFilter'\nimport BankDetailsLists from './components/BankDetailsLists'\n\nconst ViewBankDetails = () => {\n\n \n  const [userFilterData, setuserFilterData] = useState(\"\")\n\n  const getSearchFilterData = (data)=>\n  {\n    console.log(data);\n    console.log('user filters');\n    setuserFilterData(data);\n  }\n\n\n  return (\n    <div className=\" c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"12\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <BankDetailsFilter parentCallBack={getSearchFilterData} />\n                    <BankDetailsLists filterData={userFilterData} />\n                </CCardBody>\n              </CCard>\n            \n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default ViewBankDetails\n"],"sourceRoot":""}